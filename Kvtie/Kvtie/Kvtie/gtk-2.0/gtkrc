# Kvtie: 
# -made by phallus
# -built from a basis of Lyvu and Eminence

gtk_color_scheme = "fg_color:#646464\nbg_color:#fbfbfb\ntext_color:#909090\nbase_color:#fbfbfb\nselected_fg_color:#fbfbfb\nselected_bg_color:#646464\ntooltip_fg_color:#646464\ntooltip_bg_color:#f9f9f9"

gtk_color_scheme = "frame_color:#646464\ninactive_frame_color:#c3c3c3" # Fix for Chrome

gtk-icon-sizes = "gtk-button =16,16:\ngtk-dnd =16,16:\npanel =16,16:\ngtk-small-toolbar =16,16:\ngtk-large-toolbar =16,16:"

gtk-button-images = 0
gtk-auto-mnemonics = 1
#gtk-menu-popup-delay = 50 #comment out to prevent right-click disapprearing menu bug

style "default" {
	GtkButton::child-displacement-x = 1
	GtkButton::child-displacement-y = 1
	GtkButton::default-border = { 0, 0, 0, 0 }

	GtkCheckButton::indicator-size = 12

	GtkPaned::handle-size = 0

	GtkWindow::resize-grip-height = 0
	GtkWindow::resize-grip-width = 0

	GtkRange::trough-border = 0
	GtkRange::slider-width = 10
	GtkRange::stepper-size = 12
	GtkRange::stepper-spacing = 1
	GtkRange::activate-slider = 1
	GtkRange::arrow-displacement-x = 1
	GtkRange::arrow-displacement-y = 1
	GtkRange::arrow-scaling = 0.5

	GtkScale::slider-length = 22
	GtkScale::trough-side-details = 0

	GtkScrollbar::min-slider-length = 36

	GtkScrolledWindow::scrollbar-spacing = 3

	GtkMenuBar::internal-padding = 0

	GtkExpander::expander-size = 16
	
	GtkToolbar::internal-padding = 0
	
	GtkTreeView::expander-size = 12
	GtkTreeView::vertical-separator = 0

	GtkMenu::horizontal-padding = 0
	GtkMenu::vertical-padding = 0

	GtkNotebook::tab-overlap = -3

	# The following lines remove right-bottom resizing corner
	GtkWindow::resize-grip-width = 0
	GtkWindow::resize-grip-height = 0
	GtkTreeView::allow-rules = 0

	# The following line hints to gecko (and possibly other appliations)
	# that the entry should be drawn transparently on the canvas.
	# Without this, gecko will fill in the background of the entry.
	GtkEntry::honors-transparent-bg-hint = 1
	GtkEntry::state-hint = 0
	GtkEntry::progress-border = { 0,0,0,0 }

	# Flat menubars and toolbar
	GtkMenuBar::shadow_type = GTK_SHADOW_NONE
	GtkToolbar::shadow_type = GTK_SHADOW_NONE

	xthickness = 2
	ythickness = 2

	fg[NORMAL] = @fg_color
	fg[PRELIGHT] = @fg_color
	fg[SELECTED] = @selected_fg_color
	fg[ACTIVE] = @fg_color
	fg[INSENSITIVE] = "#c3c3c3"

	bg[NORMAL] = @bg_color
	bg[PRELIGHT] = "#fbfbfb"
	bg[SELECTED] = @selected_bg_color
	bg[INSENSITIVE] = @bg_color
	bg[ACTIVE] = "#fbfbfb"

	base[NORMAL] = @base_color
	base[PRELIGHT] = "#fbfbfb"
	base[ACTIVE] = @selected_bg_color
	base[SELECTED] = @selected_bg_color
	base[INSENSITIVE] = @bg_color

	text[NORMAL] = @text_color
	text[PRELIGHT] = @text_color
	text[ACTIVE] = "#c3c3c3"
	text[SELECTED] = "#ffffff"
	text[INSENSITIVE] = "#c3c3c3"

	engine "murrine" {
		animation = FALSE
		arrowstyle = 0
			# Not filled arrows
		colorize_scrollbar = FALSE
		comboboxstyle = 0
			# not colored combobox below the arrow
		contrast = 0.9
			# 0.8 for less contrast, more than 1.0 for more contrast on borders
		expanderstyle = 2
			# buttons with plus and minus
		focusstyle = 3
			# colored rectangle touching the borders
		glazestyle = 0
			# 0 = flat highlight, 1 = curved highlight, 2 = concave style,
			# 3 = top curved highlight, 4 = beryl highlight
		gradient_shades = { 1.1, 1.0, 1.0, 0.90 }
		glowstyle = 0 
		handlestyle = 0
			# three simple lines
		highlight_shade = 1.0
			# set highlight amount for buttons or widgets
		lightborder_shade = 1.0
			# sets lightborder amount for buttons or widgets
		lightborderstyle = 0
			# 0 = lightborder on top side, 1 = lightborder on all sides
		listviewheaderstyle = 0
			# 0 = flat, 1 = glassy, 2 = raised
		listviewstyle = 0
			# 0 = nothing, 1 = dotted
		menubaritemstyle = 1
			# 0 = menuitem look, 1 = button look
		menubarstyle = 0
			# 0 = flat, 1 = glassy, 2 = gradient, 3 = striped
		menuitemstyle = 0
			# 0 = flat, 1 = glassy, 2 = striped
		menustyle = 0
			# 0 = no vertical menu stripe, 1 = display vertical menu stripe
		progressbarstyle = 0
			# 0 = flat, 1 = stripped, 2 = blocks
		reliefstyle = 0
			# 0 = flat, 1 = inset, 2 = shadow
		rgba = FALSE
			# FALSE = disabled, TRUE = enabled
		roundness = 1
			# 0 = squared, 1 = old default, more will increase roundness
		scrollbarstyle = 0
			# 0 = nothing, 1 = circles, 2 = handles, 3 = diagonal stripes,
			# 4 = diagonal stripes and handles, 5 = horizontal stripes,
			# 6 = horizontal stripes and handles
		separatorstyle = 1
			# smooth separator
		sliderstyle = 0
			# 0 = nothing added, 1 = handles
		stepperstyle = 1
			# 0 = standard, 1 = integrated stepper handles, 2 = unknown
		toolbarstyle = 0
			# 0 = flat, 1 = glassy, 2 = gradient
	}
}

style "nogap" {
	xthickness = 0
	ythickness = 0
}

style "wide" {
	xthickness = 2
	ythickness = 2
}

style "wider" {
	xthickness = 3
	ythickness = 3
}

style "button" {
	xthickness = 3
	ythickness = 3
	
	bg[NORMAL] = "#f9f9f9"
	bg[ACTIVE] = "#dfdfdf"
}

style "entry" {
	xthickness = 3
	ythickness = 3

	bg[SELECTED] = @selected_bg_color
	fg[SELECTED] = @text_color

	engine "murrine" {
		border_shades = { 1.0, 1.0 }
		contrast = .7
	}
}

style "notebook-bg" = "wider" {
	bg[NORMAL] = @bg_color
	bg[ACTIVE] = @bg_color
}

style "notebook" = "notebook-bg" {
}

style "tasklist" {
	xthickness = 3
	ythickness = 3
}

style "panel" { }

style "menu" {
	xthickness = 0
	ythickness = 0
	
	fg[PRELIGHT] = "#ffffff"
	bg[NORMAL] = "#ffffff"
	
	engine "murrine" {
		# Radius of the menu items (inside menus)
		roundness = 0
	}
}

style "menu-item" {
	xthickness = 3
	ythickness = 3
	
	# Menu headers
	bg[PRELIGHT] = "#ffffff"
	
	engine "murrine" {
	}
}

style "separator-menu-item" {
	GtkSeparatorMenuItem::horizontal-padding = 0
		# We are setting the desired height by using wide-separators
		# There is no other way to get the odd height ...
		# original values: 3
	GtkWidget::wide-separators = 0
	GtkWidget::separator-width = 0
	GtkWidget::separator-height = 0
	
	xthickness = 0
	ythickness = 3
}

style "treeview" {
	engine "murrine" {
		roundness = 0 # The radius for progress bars insied treeview.
	}
}

# Based on the default style so that the colors from the button
# style are overriden again.
style "treeview-header" = "button" {
	xthickness = 3
	ythickness = 3
}

style "theme-button" = "theme-widest" {
	xthickness = 3
	ythickness = 3

	bg[INSENSITIVE] = @bg_color
}

style "theme-check-radio-buttons" = "theme-button" {
	GtkWidget::interior-focus = 0
	GtkWidget::focus-padding = 0 #original value: 3

	bg[SELECTED] = @bg_color
	text[ACTIVE] = "#646464"
	text[NORMAL] = "#909090"
	text[PRELIGHT] = "#646464"
}

style "frame-title" {
	fg[NORMAL] = lighter (@fg_color)
}

style "tooltips" {
	xthickness = 3
	ythickness = 3

	bg[NORMAL] = @tooltip_bg_color
	fg[NORMAL] = @tooltip_fg_color
}

style "progressbar" {
	xthickness = 0
	ythickness = 0

	fg[PRELIGHT] = "#f9f9f9"

	engine "murrine" {
		# Explicitly set the radius, for progress
		# bars inside menuitems
		roundness = 0
	}
}

style "statusbar" {
	xthickness = 3
	ythickness = 3
}

style "comboboxentry" {
	# NOTE:
	# If you set the appears-as-list option on comboboxes in the theme
	# you should set this hint on the combobox instead.
}

style "spinbutton" { }

style "scale" {
	GtkRange::slider-width = 12
	GtkScale::slider-length = 12

	engine "murrine" {
		roundness = 0
	}
}

style "hscale" { }

style "vscale" { }

style "scrollbar" = "button" {
	GtkRange::trough-under-steppers = 0
	
	bg[NORMAL] = "#fbfbfb"
	bg[PRELIGHT] = "#fbfbfb" 

	engine "murrine" {
	roundness = 0
	}
}

style "menubar" {
	xthickness = 3
	ythickness = 3
	
	bg[NORMAL] = @bg_color
	
	engine "murrine" {
		roundness = 0
	}
}

style "low" {
	engine "murrine" {
		contrast = 0.7
	}
}

style "nautilus-location" {
	bg[NORMAL] = @selected_bg_color
}

style "nautilus-sidebar" {
	GtkTreeView::odd_row_color = @bg_color
	GtkTreeView::even_row_color = @bg_color

	GtkPaned::handle_size = 1
	
	GtkWidget::wide_separator = 1
	GtkWidget::separator_width = 1
	GtkWidget::separator_height = 0
	GtkWidget::focus_line_width = 0
	GtkWidget::draw_border = { 0, 0, 0, 0 }

	# these make the padding from left window edge a little more sane
	GtkTreeView::vertical_separator = 3
	GtkTreeView::horizontal_separator = 12
	GtkTreeView::indent-expanders = 1 # 1 means TRUE
	GtkTreeView::expander-size = 12
	GtkExpander::expander_spacing = 12
	GtkButton::image_spacing = 3
	xthickness = 6
	ythickness = 0
}

style "pixmap-nautilus-handle" {
	GtkPaned::handle-size = 1

	engine "pixmap" {
		image { # for the thin gray line separating the sidepane and viewpane
			function = HANDLE
			recolorable = TRUE
			file = "transparent_dot.png"
			stretch = TRUE
			border = { 0, 0, 0, 0 }
		}
	}
}

style "evo-new-button" {
	engine "murrine" {
		toolbarstyle = 1
	}
}

style "gedit-sidetoolbar" {
	GtkToolbar::shadow_type = GTK_SHADOW_NONE
}

#########################################
# Matches
#########################################

# Murrine default style is applied to every widget
class "GtkWidget" style "default"

# Increase the x/ythickness in some widgets
class "GtkToolbar" style "default"
class "GtkRange" style "wide"
class "GtkFrame" style "wide"
class "GtkSeparator" style "wide"

class "GtkEntry" style "entry"
class "GtkSpinButton" style "spinbutton"
class "GtkScale" style "scale"
class "GtkVScale" style "vscale"
class "GtkHScale" style "hscale"
class "GtkScrollbar" style "scrollbar"
class "GtkVScrollbar" style "scrollbar"
class "GtkHScrollbar" style "scrollbar"
class "GtkCheckButton" style "theme-check-radio-buttons"
class "GtkButton" style "theme-button"

# General matching following, the order is choosen so that the right styles
# override each other eg. progressbar needs to be more important then the menu match.

#Panel
widget "*PanelWidget*" style "panel"
widget "*PanelApplet*" style "panel"
widget "*fast-user-switch*" style "panel" # Workaround for Fast User Switch applet
class"PanelApp*" style "panel"
class"PanelToplevel*" style "panel"

# This is not perfect, it could be done better
# (That is modify *every* widget in the notebook, and change those back that we really don't want changed)
widget_class "*<GtkNotebook>*<GtkEventBox>" style "notebook-bg"
widget_class "*<GtkNotebook>*<GtkDrawingArea>" style "notebook-bg"
widget_class "*<GtkNotebook>*<GtkLayout>" style "notebook-bg"

widget_class "*<GtkButton>" style "button"
widget_class "*<GtkNotebook>" style "notebook"
widget_class "*<GtkStatusbar>*" style : highest "statusbar"

widget_class "*<GtkComboBoxEntry>*" style "comboboxentry"
widget_class "*<GtkCombo>*" style "comboboxentry"

widget_class "*<GtkMenu>*" style "menu"
widget_class "*<GtkMenuItem>*" style "menu-item"
widget_class "*<GtkMenuBar>*" style "menubar"
widget_class "*<GtkSeparatorMenuItem>*" style "separator-menu-item"

widget_class "*.<GtkFrame>.<GtkLabel>" style "frame-title"
widget_class "*.<GtkTreeView>*" style "treeview"

widget_class "*<GtkProgressBar>" style "progressbar"

#widget_class "*ToolButton*" style "small-text"
#widget_class "*Statusbar*" style "small-text"

# Treeview header
widget_class "*.<GtkTreeView>.<GtkButton>" style "treeview-header"
widget_class "*.<GtkCTree>.<GtkButton>" style "treeview-header"
widget_class "*.<GtkList>.<GtkButton>" style "treeview-header"
widget_class "*.<GtkCList>.<GtkButton>" style "treeview-header"

# Workarounds for Evolution
widget_class "*.ETable.ECanvas" style "treeview-header"
widget_class "*.ETree.ECanvas" style "treeview-header"
widget_class "EShellWindow.GtkVBox.BonoboDock.BonoboDockBand.BonoboDockItem*" style "evo-new-button"

# Nautilus Places
widget_class "*Nautilus*Places*Sidebar*" style "nautilus-sidebar"
widget_class "*Nautilus*Side*.GtkWidget" style "nautilus-sidebar"
widget"*Nautilus*Splitter" style "pixmap-nautilus-handle"

# Toolbar appearance for Gedit sidepane
widget_class "*Gedit*Pane*" style "gedit-sidetoolbar"

# The window of the tooltip is called "gtk-tooltip"
################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
# (It will involve setting different priorities, etc.)
################################
widget "gtk-tooltip*" style "tooltips"

###################################################
# Special cases and work arounds
###################################################

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget "*.nautilus-extra-view-widget" style : highest "nautilus-location"

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id =382646
# Note that the work around assumes that the combobox is _not_ in
# appears-as-list mode.
# Similar hack also in the menuitem style.
# This style does not affect GtkComboBoxEntry, it does have an effect
# on comboboxes in appears-as-list mode though.
style "text-is-fg-color-workaround" {
	text[NORMAL] = @fg_color
	text[PRELIGHT] = @fg_color
	text[SELECTED] = @selected_fg_color
	text[ACTIVE] = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}
widget_class "*.<GtkComboBox>.<GtkCellView>" style "text-is-fg-color-workaround"

style "menuitem-text-is-fg-color-workaround" {
	text[NORMAL] = @fg_color
	text[PRELIGHT] = @selected_fg_color
	text[SELECTED] = @selected_fg_color
	text[ACTIVE] = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}
widget "*.gtk-combobox-popup-menu.*" style "menuitem-text-is-fg-color-workaround"

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the
# base color set.
style "fg-is-text-color-workaround" {
	fg[NORMAL] = @text_color
	fg[PRELIGHT] = @text_color
	fg[ACTIVE] = @selected_fg_color
	fg[SELECTED] = @selected_fg_color
	fg[INSENSITIVE] = darker (@bg_color)
}
widget_class "*<GtkListItem>*" style "fg-is-text-color-workaround"
# The same problem also exists for GtkCList and GtkCTree
# Only match GtkCList and not the parent widgets, because that would also
# change the headers.
widget_class "*<GtkCList>" style "fg-is-text-color-workaround"
